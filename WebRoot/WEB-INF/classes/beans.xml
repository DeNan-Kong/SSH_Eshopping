<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xmlns:context="http://www.springframework.org/schema/context"  
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx" 
     xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd ">   
	<bean id="date" class="java.util.Date"/>
	<!-- com.mchange.v2.c3p0.ComboPooledDataSource类在c3p0-0.9.5.1.jar包的com.mchange.v2.c3p0包中 -->  
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"><!-- 获取数据库连接 -->  
    	<property name="driverClass" value="com.mysql.jdbc.Driver" />  
    	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shop" />  
    	<property name="user" value="root" />  
    	<property name="password" value="1015" />  
	</bean>
	<!-- org.springframework.orm.hibernate4.LocalSessionFactoryBean类在spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 -->  
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"><!-- 获取session，由于HibernateTemplate依赖于Spring，依赖性太强 -->  
		<property name="dataSource" ref="dataSource" />  
	    <property name="configLocation" value="classpath:hibernate.cfg.xml" /> <!-- 加载hibernate配置文件 -->  
	</bean>    
	<!-- org.springframework.orm.hibernate4.HibernateTransactionManager类spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 -->  
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
	     <property name="sessionFactory" ref="sessionFactory" /><!-- 配置事务管理器，是用来管理sessionFactory的，这样所有的由sessionFactory产生的session将会有声明式的管理 -->  
	</bean>
	<!-- advice的目的是指定哪些方法需要什么类型的事务模式 -->
	<tx:advice id="advice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	        <tx:method name="save*" propagation="REQUIRED"/><!-- REQUIRED表示如果存在事务，则支持当前的事务，如果没有则创建一个新的事务 -->  
	        <tx:method name="update*" propagation="REQUIRED"/>  
	        <tx:method name="delete*" propagation="REQUIRED"/>  
	        <tx:method name="*" propagation="SUPPORTS"/><!-- SUPPORTS表示如果存在事务，则支持当前的事务，如果没有就算了 -->    
	    </tx:attributes>  
	</tx:advice>
	<!-- AOP切面编程 -->
	<aop:config>  
    <!-- 配置哪些包的类要切入事务 -->  
	    <aop:pointcut id="pointcut" expression="execution(* com.shop.service.impl.*.*(..))" />  
	    <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/><!-- 连接了上面的advice和上面的pointcut -->  
    <!-- aop:pointcut要写在aop:advisor上面，否则会报错 -->  
 	</aop:config> 	
	
	<!-- 获取public.properties文件的参数 -->	
	<bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
    <property name="locations"><!-- 这里是PropertiesFactoryBean类，它也有个locations属性，也是接收一个数组-->
        <array>  
            <value>classpath:public.properties</value>  
        </array>  
    </property>  
	</bean>  
	<context:component-scan base-package="com.shop"/>   
</beans>
